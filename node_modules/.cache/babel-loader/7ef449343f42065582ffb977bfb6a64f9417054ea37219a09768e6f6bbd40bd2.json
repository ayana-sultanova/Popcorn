{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\jonas-course\\\\usepopcorn\\\\src\\\\components\\\\movie\\\\MovieDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useKey } from \"../../hooks/useKey\";\nimport Loader from \"../loader/Loader\";\nimport StarRating from \"../star/StarRating\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n4;\nconst KEY = \"f84fc31d\";\nfunction MovieDetails(_ref) {\n  _s();\n  var _watched$find;\n  let {\n    selectedId,\n    onCloseMovie,\n    onAddWatched,\n    watched\n  } = _ref;\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [userRating, setUserRating] = useState(\"\");\n  const countRef = useRef(0);\n  useEffect(function () {\n    if (userRating) countRef.current++;\n  }, [userRating]);\n  const isWatched = watched.map(movie => movie.imdbID).includes(selectedId);\n  const watchedUserRating = (_watched$find = watched.find(movie => movie.imdbID === selectedId)) === null || _watched$find === void 0 ? void 0 : _watched$find.userRating;\n  const {\n    Title: title,\n    Year: year,\n    Poster: poster,\n    Runtime: runtime,\n    imdbRating,\n    Plot: plot,\n    Released: released,\n    Actors: actors,\n    Director: director,\n    Genre: genre\n  } = movie;\n  const isTop = imdbRating > 8;\n  function handleAdd() {\n    const newWatchedMovie = {\n      imdbID: selectedId,\n      title,\n      year,\n      poster,\n      imdbRating: Number(imdbRating),\n      runtime: Number(runtime.split(\" \").at(0)),\n      userRating,\n      countRatingDecisions: countRef.current\n    };\n    onAddWatched(newWatchedMovie);\n    onCloseMovie();\n\n    // setAvgRating(Number(imdbRating));\n    // setAvgRating((avgRating) => (avgRating + userRating) / 2);\n  }\n\n  useKey(\"Escape\", onCloseMovie);\n  useEffect(function () {\n    async function getMovieDetails() {\n      setIsLoading(true);\n      const res = await fetch(`http://www.omdbapi.com/?apikey=${KEY}&i=${selectedId}`);\n      const data = await res.json();\n      setMovie(data);\n      setIsLoading(false);\n    }\n    getMovieDetails();\n  }, [selectedId]);\n  useEffect(function () {\n    if (!title) return;\n    document.title = `Movie | ${title}`;\n    return function () {\n      document.title = \"usePopcorn\";\n      // console.log(`Clean up effect for movie ${title}`);\n    };\n  }, [title]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"details\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-back\",\n          onClick: onCloseMovie,\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: poster,\n          alt: `Poster of ${movie} movie`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details-overview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [released, \" \\u2022 \", runtime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2B50\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this), imdbRating, \" IMDb rating\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating\",\n          children: !isWatched ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(StarRating, {\n              maxRating: 10,\n              size: 24,\n              onSetRating: setUserRating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 37\n            }, this), userRating > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-add\",\n              onClick: handleAdd,\n              children: \"+ Add to list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You rated with movie \", watchedUserRating, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2B50\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 78\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: plot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Starring \", actors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Directed by \", director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_s(MovieDetails, \"ROBh/GPTnAnYSRB2tZwmbQ1wbRE=\", false, function () {\n  return [useKey];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useKey","Loader","StarRating","jsxDEV","_jsxDEV","Fragment","_Fragment","KEY","MovieDetails","_ref","_s","_watched$find","selectedId","onCloseMovie","onAddWatched","watched","movie","setMovie","isLoading","setIsLoading","userRating","setUserRating","countRef","current","isWatched","map","imdbID","includes","watchedUserRating","find","Title","title","Year","year","Poster","poster","Runtime","runtime","imdbRating","Plot","plot","Released","released","Actors","actors","Director","director","Genre","genre","isTop","handleAdd","newWatchedMovie","Number","split","at","countRatingDecisions","getMovieDetails","res","fetch","data","json","document","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","maxRating","size","onSetRating","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Рабочий стол/jonas-course/usepopcorn/src/components/movie/MovieDetails.js"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport {useKey} from \"../../hooks/useKey\";\r\nimport Loader from \"../loader/Loader\";\r\nimport StarRating from \"../star/StarRating\";4\r\n\r\nconst KEY = \"f84fc31d\";\r\n\r\nfunction MovieDetails({ selectedId, onCloseMovie, onAddWatched, watched }) {\r\n    const [movie, setMovie] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [userRating, setUserRating] = useState(\"\");\r\n\r\n    const countRef = useRef(0);\r\n\r\n    useEffect(\r\n        function () {\r\n            if (userRating) countRef.current++;\r\n        },\r\n        [userRating]\r\n    );\r\n\r\n    const isWatched = watched.map((movie) => movie.imdbID).includes(selectedId);\r\n    const watchedUserRating = watched.find(\r\n        (movie) => movie.imdbID === selectedId\r\n    )?.userRating;\r\n\r\n    const {\r\n        Title: title,\r\n        Year: year,\r\n        Poster: poster,\r\n        Runtime: runtime,\r\n        imdbRating,\r\n        Plot: plot,\r\n        Released: released,\r\n        Actors: actors,\r\n        Director: director,\r\n        Genre: genre,\r\n    } = movie;\r\n\r\n    const isTop = imdbRating > 8;\r\n\r\n    function handleAdd() {\r\n        const newWatchedMovie = {\r\n            imdbID: selectedId,\r\n            title,\r\n            year,\r\n            poster,\r\n            imdbRating: Number(imdbRating),\r\n            runtime: Number(runtime.split(\" \").at(0)),\r\n            userRating,\r\n            countRatingDecisions: countRef.current,\r\n        };\r\n\r\n        onAddWatched(newWatchedMovie);\r\n        onCloseMovie();\r\n\r\n        // setAvgRating(Number(imdbRating));\r\n        // setAvgRating((avgRating) => (avgRating + userRating) / 2);\r\n    }\r\n\r\n    useKey(\"Escape\", onCloseMovie);\r\n\r\n    useEffect(\r\n        function () {\r\n            async function getMovieDetails() {\r\n                setIsLoading(true);\r\n                const res = await fetch(\r\n                    `http://www.omdbapi.com/?apikey=${KEY}&i=${selectedId}`\r\n                );\r\n                const data = await res.json();\r\n                setMovie(data);\r\n                setIsLoading(false);\r\n            }\r\n            getMovieDetails();\r\n        },\r\n        [selectedId]\r\n    );\r\n\r\n    useEffect(\r\n        function () {\r\n            if (!title) return;\r\n            document.title = `Movie | ${title}`;\r\n\r\n            return function () {\r\n                document.title = \"usePopcorn\";\r\n                // console.log(`Clean up effect for movie ${title}`);\r\n            };\r\n        },\r\n        [title]\r\n    );\r\n\r\n    return (\r\n        <div className=\"details\">\r\n            {isLoading ? (\r\n                <Loader />\r\n            ) : (\r\n                <>\r\n                    <header>\r\n                        <button className=\"btn-back\" onClick={onCloseMovie}>\r\n                            &larr;\r\n                        </button>\r\n                        <img src={poster} alt={`Poster of ${movie} movie`} />\r\n                        <div className=\"details-overview\">\r\n                            <h2>{title}</h2>\r\n                            <p>\r\n                                {released} &bull; {runtime}\r\n                            </p>\r\n                            <p>{genre}</p>\r\n                            <p>\r\n                                <span>⭐️</span>\r\n                                {imdbRating} IMDb rating\r\n                            </p>\r\n                        </div>\r\n                    </header>\r\n\r\n                    {/* <p>{avgRating}</p> */}\r\n\r\n                    <section>\r\n                        <div className=\"rating\">\r\n                            {!isWatched ? (\r\n                                <>\r\n                                    <StarRating\r\n                                        maxRating={10}\r\n                                        size={24}\r\n                                        onSetRating={setUserRating}\r\n                                    />\r\n                                    {userRating > 0 && (\r\n                                        <button className=\"btn-add\" onClick={handleAdd}>\r\n                                            + Add to list\r\n                                        </button>\r\n                                    )}\r\n                                </>\r\n                            ) : (\r\n                                <p>\r\n                                    You rated with movie {watchedUserRating} <span>⭐️</span>\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n                        <p>\r\n                            <em>{plot}</em>\r\n                        </p>\r\n                        <p>Starring {actors}</p>\r\n                        <p>Directed by {director}</p>\r\n                    </section>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieDetails;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AACxD,SAAQC,MAAM,QAAO,oBAAoB;AACzC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,UAAU,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,CAAC;AAE7C,MAAMC,GAAG,GAAG,UAAU;AAEtB,SAASC,YAAYA,CAAAC,IAAA,EAAsD;EAAAC,EAAA;EAAA,IAAAC,aAAA;EAAA,IAArD;IAAEC,UAAU;IAAEC,YAAY;IAAEC,YAAY;IAAEC;EAAQ,CAAC,GAAAN,IAAA;EACrE,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMuB,QAAQ,GAAGxB,MAAM,CAAC,CAAC,CAAC;EAE1BD,SAAS,CACL,YAAY;IACR,IAAIuB,UAAU,EAAEE,QAAQ,CAACC,OAAO,EAAE;EACtC,CAAC,EACD,CAACH,UAAU,CAAC,CACf;EAED,MAAMI,SAAS,GAAGT,OAAO,CAACU,GAAG,CAAET,KAAK,IAAKA,KAAK,CAACU,MAAM,CAAC,CAACC,QAAQ,CAACf,UAAU,CAAC;EAC3E,MAAMgB,iBAAiB,IAAAjB,aAAA,GAAGI,OAAO,CAACc,IAAI,CACjCb,KAAK,IAAKA,KAAK,CAACU,MAAM,KAAKd,UAAU,CACzC,cAAAD,aAAA,uBAFyBA,aAAA,CAEvBS,UAAU;EAEb,MAAM;IACFU,KAAK,EAAEC,KAAK;IACZC,IAAI,EAAEC,IAAI;IACVC,MAAM,EAAEC,MAAM;IACdC,OAAO,EAAEC,OAAO;IAChBC,UAAU;IACVC,IAAI,EAAEC,IAAI;IACVC,QAAQ,EAAEC,QAAQ;IAClBC,MAAM,EAAEC,MAAM;IACdC,QAAQ,EAAEC,QAAQ;IAClBC,KAAK,EAAEC;EACX,CAAC,GAAGhC,KAAK;EAET,MAAMiC,KAAK,GAAGX,UAAU,GAAG,CAAC;EAE5B,SAASY,SAASA,CAAA,EAAG;IACjB,MAAMC,eAAe,GAAG;MACpBzB,MAAM,EAAEd,UAAU;MAClBmB,KAAK;MACLE,IAAI;MACJE,MAAM;MACNG,UAAU,EAAEc,MAAM,CAACd,UAAU,CAAC;MAC9BD,OAAO,EAAEe,MAAM,CAACf,OAAO,CAACgB,KAAK,CAAC,GAAG,CAAC,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC;MACzClC,UAAU;MACVmC,oBAAoB,EAAEjC,QAAQ,CAACC;IACnC,CAAC;IAEDT,YAAY,CAACqC,eAAe,CAAC;IAC7BtC,YAAY,EAAE;;IAEd;IACA;EACJ;;EAEAb,MAAM,CAAC,QAAQ,EAAEa,YAAY,CAAC;EAE9BhB,SAAS,CACL,YAAY;IACR,eAAe2D,eAAeA,CAAA,EAAG;MAC7BrC,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMsC,GAAG,GAAG,MAAMC,KAAK,CAClB,kCAAiCnD,GAAI,MAAKK,UAAW,EAAC,CAC1D;MACD,MAAM+C,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;MAC7B3C,QAAQ,CAAC0C,IAAI,CAAC;MACdxC,YAAY,CAAC,KAAK,CAAC;IACvB;IACAqC,eAAe,EAAE;EACrB,CAAC,EACD,CAAC5C,UAAU,CAAC,CACf;EAEDf,SAAS,CACL,YAAY;IACR,IAAI,CAACkC,KAAK,EAAE;IACZ8B,QAAQ,CAAC9B,KAAK,GAAI,WAAUA,KAAM,EAAC;IAEnC,OAAO,YAAY;MACf8B,QAAQ,CAAC9B,KAAK,GAAG,YAAY;MAC7B;IACJ,CAAC;EACL,CAAC,EACD,CAACA,KAAK,CAAC,CACV;EAED,oBACI3B,OAAA;IAAK0D,SAAS,EAAC,SAAS;IAAAC,QAAA,EACnB7C,SAAS,gBACNd,OAAA,CAACH,MAAM;MAAA+D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,gBAEV/D,OAAA,CAAAE,SAAA;MAAAyD,QAAA,gBACI3D,OAAA;QAAA2D,QAAA,gBACI3D,OAAA;UAAQ0D,SAAS,EAAC,UAAU;UAACM,OAAO,EAAEvD,YAAa;UAAAkD,QAAA,EAAC;QAEpD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eACT/D,OAAA;UAAKiE,GAAG,EAAElC,MAAO;UAACmC,GAAG,EAAG,aAAYtD,KAAM;QAAQ;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACrD/D,OAAA;UAAK0D,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC7B3D,OAAA;YAAA2D,QAAA,EAAKhC;UAAK;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eAChB/D,OAAA;YAAA2D,QAAA,GACKrB,QAAQ,EAAC,UAAQ,EAACL,OAAO;UAAA;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAC1B,eACJ/D,OAAA;YAAA2D,QAAA,EAAIf;UAAK;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eACd/D,OAAA;YAAA2D,QAAA,gBACI3D,OAAA;cAAA2D,QAAA,EAAM;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAO,EACd7B,UAAU,EAAC,cAChB;UAAA;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAI;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACD,eAIT/D,OAAA;QAAA2D,QAAA,gBACI3D,OAAA;UAAK0D,SAAS,EAAC,QAAQ;UAAAC,QAAA,EAClB,CAACvC,SAAS,gBACPpB,OAAA,CAAAE,SAAA;YAAAyD,QAAA,gBACI3D,OAAA,CAACF,UAAU;cACPqE,SAAS,EAAE,EAAG;cACdC,IAAI,EAAE,EAAG;cACTC,WAAW,EAAEpD;YAAc;cAAA2C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAC7B,EACD/C,UAAU,GAAG,CAAC,iBACXhB,OAAA;cAAQ0D,SAAS,EAAC,SAAS;cAACM,OAAO,EAAElB,SAAU;cAAAa,QAAA,EAAC;YAEhD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACH;UAAA,gBACF,gBAEH/D,OAAA;YAAA2D,QAAA,GAAG,uBACsB,EAACnC,iBAAiB,EAAC,GAAC,eAAAxB,OAAA;cAAA2D,QAAA,EAAM;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAO;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAE/D;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACC,eACN/D,OAAA;UAAA2D,QAAA,eACI3D,OAAA;YAAA2D,QAAA,EAAKvB;UAAI;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAM;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACf,eACJ/D,OAAA;UAAA2D,QAAA,GAAG,WAAS,EAACnB,MAAM;QAAA;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACxB/D,OAAA;UAAA2D,QAAA,GAAG,cAAY,EAACjB,QAAQ;QAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvB;IAAA;EAEjB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd;AAACzD,EAAA,CA7IQF,YAAY;EAAA,QAqDjBR,MAAM;AAAA;AAAA0E,EAAA,GArDDlE,YAAY;AA+IrB,eAAeA,YAAY;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}