{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\jonas-course\\\\usepopcorn\\\\src\\\\components\\\\movie\\\\MovieDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useKey } from \"../../hooks/useKey\";\nimport Loader from \"../loader/Loader\";\nimport StarRating from \"../star/StarRating\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MovieDetails(_ref) {\n  _s();\n  var _watched$find;\n  let {\n    selectedId,\n    onCloseMovie,\n    onAddWatched,\n    watched\n  } = _ref;\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [userRating, setUserRating] = useState(\"\");\n  const countRef = useRef(0);\n  useEffect(function () {\n    if (userRating) countRef.current++;\n  }, [userRating]);\n  const isWatched = watched.map(movie => movie.imdbID).includes(selectedId);\n  const watchedUserRating = (_watched$find = watched.find(movie => movie.imdbID === selectedId)) === null || _watched$find === void 0 ? void 0 : _watched$find.userRating;\n  const {\n    Title: title,\n    Year: year,\n    Poster: poster,\n    Runtime: runtime,\n    imdbRating,\n    Plot: plot,\n    Released: released,\n    Actors: actors,\n    Director: director,\n    Genre: genre\n  } = movie;\n\n  // if (imdbRating > 8) return <p>Greatest ever!</p>;\n  // if (imdbRating > 8) [isTop, setIsTop] = useState(true);\n\n  // const [isTop, setIsTop] = useState(imdbRating > 8);\n  // console.log(isTop);\n  // useEffect(\n  //   function () {\n  //     setIsTop(imdbRating > 8);\n  //   },\n  //   [imdbRating]\n  // );\n\n  const isTop = imdbRating > 8;\n  console.log(isTop);\n\n  // const [avgRating, setAvgRating] = useState(0);\n\n  function handleAdd() {\n    const newWatchedMovie = {\n      imdbID: selectedId,\n      title,\n      year,\n      poster,\n      imdbRating: Number(imdbRating),\n      runtime: Number(runtime.split(\" \").at(0)),\n      userRating,\n      countRatingDecisions: countRef.current\n    };\n    onAddWatched(newWatchedMovie);\n    onCloseMovie();\n\n    // setAvgRating(Number(imdbRating));\n    // setAvgRating((avgRating) => (avgRating + userRating) / 2);\n  }\n\n  useKey(\"Escape\", onCloseMovie);\n  useEffect(function () {\n    async function getMovieDetails() {\n      setIsLoading(true);\n      const res = await fetch(`http://www.omdbapi.com/?apikey=${KEY}&i=${selectedId}`);\n      const data = await res.json();\n      setMovie(data);\n      setIsLoading(false);\n    }\n    getMovieDetails();\n  }, [selectedId]);\n  useEffect(function () {\n    if (!title) return;\n    document.title = `Movie | ${title}`;\n    return function () {\n      document.title = \"usePopcorn\";\n      // console.log(`Clean up effect for movie ${title}`);\n    };\n  }, [title]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"details\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-back\",\n          onClick: onCloseMovie,\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: poster,\n          alt: `Poster of ${movie} movie`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details-overview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [released, \" \\u2022 \", runtime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2B50\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this), imdbRating, \" IMDb rating\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating\",\n          children: !isWatched ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(StarRating, {\n              maxRating: 10,\n              size: 24,\n              onSetRating: setUserRating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 37\n            }, this), userRating > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-add\",\n              onClick: handleAdd,\n              children: \"+ Add to list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You rated with movie \", watchedUserRating, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2B50\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 78\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: plot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Starring \", actors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Directed by \", director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n_s(MovieDetails, \"ROBh/GPTnAnYSRB2tZwmbQ1wbRE=\", false, function () {\n  return [useKey];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useKey","Loader","StarRating","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieDetails","_ref","_s","_watched$find","selectedId","onCloseMovie","onAddWatched","watched","movie","setMovie","isLoading","setIsLoading","userRating","setUserRating","countRef","current","isWatched","map","imdbID","includes","watchedUserRating","find","Title","title","Year","year","Poster","poster","Runtime","runtime","imdbRating","Plot","plot","Released","released","Actors","actors","Director","director","Genre","genre","isTop","console","log","handleAdd","newWatchedMovie","Number","split","at","countRatingDecisions","getMovieDetails","res","fetch","KEY","data","json","document","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","maxRating","size","onSetRating","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Рабочий стол/jonas-course/usepopcorn/src/components/movie/MovieDetails.js"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport {useKey} from \"../../hooks/useKey\";\r\nimport Loader from \"../loader/Loader\";\r\nimport StarRating from \"../star/StarRating\";\r\n\r\nfunction MovieDetails({ selectedId, onCloseMovie, onAddWatched, watched }) {\r\n    const [movie, setMovie] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [userRating, setUserRating] = useState(\"\");\r\n\r\n    const countRef = useRef(0);\r\n\r\n    useEffect(\r\n        function () {\r\n            if (userRating) countRef.current++;\r\n        },\r\n        [userRating]\r\n    );\r\n\r\n    const isWatched = watched.map((movie) => movie.imdbID).includes(selectedId);\r\n    const watchedUserRating = watched.find(\r\n        (movie) => movie.imdbID === selectedId\r\n    )?.userRating;\r\n\r\n    const {\r\n        Title: title,\r\n        Year: year,\r\n        Poster: poster,\r\n        Runtime: runtime,\r\n        imdbRating,\r\n        Plot: plot,\r\n        Released: released,\r\n        Actors: actors,\r\n        Director: director,\r\n        Genre: genre,\r\n    } = movie;\r\n\r\n    // if (imdbRating > 8) return <p>Greatest ever!</p>;\r\n    // if (imdbRating > 8) [isTop, setIsTop] = useState(true);\r\n\r\n    // const [isTop, setIsTop] = useState(imdbRating > 8);\r\n    // console.log(isTop);\r\n    // useEffect(\r\n    //   function () {\r\n    //     setIsTop(imdbRating > 8);\r\n    //   },\r\n    //   [imdbRating]\r\n    // );\r\n\r\n    const isTop = imdbRating > 8;\r\n    console.log(isTop);\r\n\r\n    // const [avgRating, setAvgRating] = useState(0);\r\n\r\n    function handleAdd() {\r\n        const newWatchedMovie = {\r\n            imdbID: selectedId,\r\n            title,\r\n            year,\r\n            poster,\r\n            imdbRating: Number(imdbRating),\r\n            runtime: Number(runtime.split(\" \").at(0)),\r\n            userRating,\r\n            countRatingDecisions: countRef.current,\r\n        };\r\n\r\n        onAddWatched(newWatchedMovie);\r\n        onCloseMovie();\r\n\r\n        // setAvgRating(Number(imdbRating));\r\n        // setAvgRating((avgRating) => (avgRating + userRating) / 2);\r\n    }\r\n\r\n    useKey(\"Escape\", onCloseMovie);\r\n\r\n    useEffect(\r\n        function () {\r\n            async function getMovieDetails() {\r\n                setIsLoading(true);\r\n                const res = await fetch(\r\n                    `http://www.omdbapi.com/?apikey=${KEY}&i=${selectedId}`\r\n                );\r\n                const data = await res.json();\r\n                setMovie(data);\r\n                setIsLoading(false);\r\n            }\r\n            getMovieDetails();\r\n        },\r\n        [selectedId]\r\n    );\r\n\r\n    useEffect(\r\n        function () {\r\n            if (!title) return;\r\n            document.title = `Movie | ${title}`;\r\n\r\n            return function () {\r\n                document.title = \"usePopcorn\";\r\n                // console.log(`Clean up effect for movie ${title}`);\r\n            };\r\n        },\r\n        [title]\r\n    );\r\n\r\n    return (\r\n        <div className=\"details\">\r\n            {isLoading ? (\r\n                <Loader />\r\n            ) : (\r\n                <>\r\n                    <header>\r\n                        <button className=\"btn-back\" onClick={onCloseMovie}>\r\n                            &larr;\r\n                        </button>\r\n                        <img src={poster} alt={`Poster of ${movie} movie`} />\r\n                        <div className=\"details-overview\">\r\n                            <h2>{title}</h2>\r\n                            <p>\r\n                                {released} &bull; {runtime}\r\n                            </p>\r\n                            <p>{genre}</p>\r\n                            <p>\r\n                                <span>⭐️</span>\r\n                                {imdbRating} IMDb rating\r\n                            </p>\r\n                        </div>\r\n                    </header>\r\n\r\n                    {/* <p>{avgRating}</p> */}\r\n\r\n                    <section>\r\n                        <div className=\"rating\">\r\n                            {!isWatched ? (\r\n                                <>\r\n                                    <StarRating\r\n                                        maxRating={10}\r\n                                        size={24}\r\n                                        onSetRating={setUserRating}\r\n                                    />\r\n                                    {userRating > 0 && (\r\n                                        <button className=\"btn-add\" onClick={handleAdd}>\r\n                                            + Add to list\r\n                                        </button>\r\n                                    )}\r\n                                </>\r\n                            ) : (\r\n                                <p>\r\n                                    You rated with movie {watchedUserRating} <span>⭐️</span>\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n                        <p>\r\n                            <em>{plot}</em>\r\n                        </p>\r\n                        <p>Starring {actors}</p>\r\n                        <p>Directed by {director}</p>\r\n                    </section>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieDetails;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}